import java.util.*;
class Solution {
    public List<List<Integer>> permuteUnique(int[] nums) {
        Set<List<Integer>> res = new  HashSet();
        permute(nums,0,res);
        return new ArrayList(res);
    }
    
    static void permute(int[] nums,int st,Set<List<Integer>>res) {
        if(st==nums.length)
            res.add(arrayToList(nums));
        for(int i=st;i<nums.length;i++)
        {
            swap(nums,i,st);
            permute(nums,st+1,res);
            swap(nums,i,st);
        }
    }
    static void swap(int[] arr,int i,int j){
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    static List<Integer> arrayToList(int[] nums){
        List<Integer> l = new ArrayList();
        for(int n: nums)
            l.add(n);
        return l;
    }
}
